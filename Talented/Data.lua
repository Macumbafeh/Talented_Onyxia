local Talented = _G.Talented

-------------------------------------------------------------------------------
-- spelldata.lua
--

-- Generated Data, do not modify
do
  local expac = GetExpansionLevel()
  local AllPets = {
    [0] = { --Vanilla
      [1] = { --Great Stamina
        serverIndex = 1,
        column = 1, row = 1,
        ranks = {
          [1] = 4188, [2] = 4189, [3] = 4190, [4] = 4191, [5] = 4192,
          [6] = 4193, [7] = 4194, [8] = 5041, [9] = 5042},
        },
      [4] = { --Natural Armor
        serverIndex = 4,
        column = 1, row = 2,
        ranks = {
          [1] = 24549, [2] = 24550, [3] = 24551, [4] = 24552, [5] = 24553,
          [6] = 24554, [7] = 24555, [8] = 24629, [9] = 24630},
        },
      [5] = { --Cower
        serverIndex = 5,
        column = 3, row = 2,
        ranks = {
          [1] = 1742, [2] = 1753, [3] = 1754, [4] = 1755, [5] = 1756, [6] = 16697},
        },
      [7] = { --Arcane Resistance
        serverIndex = 7,
        column = 4, row = 3,
        ranks = {
          [1] = 24493, [2] = 24497, [3] = 24500, [4] = 24501},
        },
      [8] = { --Fire Resistance
        serverIndex = 8,
        column = 1, row = 3,
        ranks = {
          [1] = 23992, [2] = 24439, [3] = 24444, [4] = 24445},
        },
      [9] = { --Frost Resistance
        serverIndex = 9,
        column = 2, row = 3,
        ranks = {
          [1] = 24446, [2] = 24447, [3] = 24448, [4] = 24449},
        },
      [10] = { --Nature Resistance
        serverIndex = 10,
        column = 3, row = 3,
        ranks = {
          [1] = 24492, [2] = 24502, [3] = 24503, [4] = 24504},
        },
      [11] = { --Shadow Resistance
        serverIndex = 11,
        column = 1, row = 4,
        ranks = {
          [1] = 24488, [2] = 24505, [3] = 24507, [4] = 24506},
        },
    },
  [1] = { --TBC
		[1] = { --Great Stamina
		serverIndex = 1,
		column = 1, row = 1,
		ranks = {
			[1] = 4188, [2] = 4189, [3] = 4190, [4] = 4191, [5] = 4192,
			[6] = 4193, [7] = 4194, [8] = 5041, [9] = 5042, [10] = 27062},
		},
		[4] = { --Natural Armor
		serverIndex = 4,
		column = 2, row = 1,
		ranks = {
			[1] = 24549, [2] = 24550, [3] = 24551, [4] = 24552, [5] = 24553,
			[6] = 24554, [7] = 24555, [8] = 24629, [9] = 24630, [10] = 27061},
		},
		[5] = { --Cower
		serverIndex = 5,
		column = 3, row = 2,
		ranks = {
			[1] = 1742, [2] = 1753, [3] = 1754, [4] = 1755, [5] = 1756,
			[6] = 16697,[7] = 27048},
		},
		[7] = { --Arcane Resistance
		serverIndex = 7,
		column = 1, row = 4,
		ranks = {
			[1] = 24493, [2] = 24497, [3] = 24500, [4] = 24501, [5] = 27052},
		},
		[8] = { --Fire Resistance
		serverIndex = 8,
		column = 2, row = 4,
		ranks = {
			[1] = 23992, [2] = 24439, [3] = 24444, [4] = 24445, [5] = 27053},
		},
		[9] = { --Frost Resistance
		serverIndex = 9,
		column = 3, row = 4,
		ranks = {
			[1] = 24446, [2] = 24447, [3] = 24448, [4] = 24449, [5] = 27054},
		},
		[10] = { --Nature Resistance
		serverIndex = 10,
		column = 1, row = 5,
		ranks = {
			[1] = 24492, [2] = 24502, [3] = 24503, [4] = 24504, [5] = 27055},
		},
		[11] = { --Shadow Resistance
		serverIndex = 11,
		column = 2, row = 5,
		ranks = {
			[1] = 24488, [2] = 24505, [3] = 24507, [4] = 24506, [5] = 27056},
		},
    [25] = { --Avoidance
		serverIndex = 11,
		column = 2, row = 3,
		ranks = {
			[1] = 35694, [2] = 35698},
		},
    [26] = { --Cobra Reflexes
		serverIndex = 11,
		column = 1, row = 3,
		ranks = {
			[1] = 25076},
		},
    },
  }
  local FamilySkills = {
    [0] = { --Vanilla
      [2] = { --Bite
        serverIndex = 2,
        column = 2, row = 1,
        ranks = {
          [1] = 17253, [2] = 17255, [3] = 17256, [4] = 17257,
          [5] = 17258, [6] = 17259, [7] = 17260, [8] = 17261},
        },
      [3] = { --Claw
        serverIndex = 3,
        column = 3, row = 1,
        ranks = {
          [1] = 16827, [2] = 16828, [3] = 16829, [4] = 16830,
          [5] = 16831, [6] = 16832, [7] = 3010,  [8] = 3009},
        },
      [6] = { --Dash
        serverIndex = 6,
        column = 4, row = 2,
        ranks = {
          [1] = 23099, [2] = 23109, [3] = 23110},
        },
      [12] = { --Dive
        serverIndex = 12,
        column = 2, row = 2,
        ranks = {
          [1] = 23145, [2] = 23147, [3] = 23148},
        },
      [13] = { --Screech
        serverIndex = 13,
        column = 4, row = 1,
        ranks = {
          [1] = 24423, [2] = 24577, [3] = 24578, [4] = 24579},
        },
      [14] = { --Charge
        serverIndex = 14,
        column = 4, row = 1,
        ranks = {
          [1] = 7371, [2] = 26177, [3] = 26178, [4] = 26179, [5] = 26201, [6] = 27685},
        },
      [15] = { --Prowl
        serverIndex = 15,
        column = 4, row = 1,
        ranks = {
          [1] = 24450, [2] = 24452, [3] = 24453},
        },
      [16] = { --Thunderstomp
        serverIndex = 16,
        column = 4, row = 1,
        ranks = {
          [1] = 26090, [2] = 26187, [3] = 26188},
        },
      [17] = { --Scorpid Poison
        serverIndex = 17,
        column = 4, row = 1,
        ranks = {
          [1] = 24640, [2] = 24583, [3] = 24586, [4] = 24587},
        },
      [18] = { --Shell Shield
        serverIndex = 18,
        column = 4, row = 1,
        ranks = {
          [1] = 26064},
        },
      [19] = { --Lightning Breath
        serverIndex = 19,
        column = 4, row = 1,
        ranks = {
          [1] = 24844, [2] = 25008, [3] = 25009, [4] = 25010, [5] = 25011, [6] = 25012},
        },
      [20] = { --Furious Howl
        serverIndex = 20,
        column = 4, row = 1,
        ranks = {
          [1] = 24604, [2] = 24605, [3] = 24603, [4] = 24597},
        },
    },
  [1] = { --TBC
	      [2] = { --Bite
      	serverIndex = 2,
      	column = 3, row = 1,
      	ranks = {
          [1] = 17253, [2] = 17255, [3] = 17256, [4] = 17257,
          [5] = 17258, [6] = 17259, [7] = 17260, [8] = 17261, [9] = 27050},
        },
      [3] = { --Claw
        serverIndex = 3,
        column = 4, row = 1,
        ranks = {
          [1] = 16827, [2] = 16828, [3] = 16829, [4] = 16830,
          [5] = 16831, [6] = 16832, [7] = 3010,  [8] = 3009, [9] = 27049},
        },
      [6] = { --Dash
        serverIndex = 6,
        column = 4, row = 2,
        ranks = {
          [1] = 23099, [2] = 23109, [3] = 23110},
        },
      [12] = { --Dive
        serverIndex = 12,
        column = 2, row = 2,
        ranks = {
          [1] = 23145, [2] = 23147, [3] = 23148},
        },
      [13] = { --Screech
        serverIndex = 13,
        column = 4, row = 1,
        ranks = {
          [1] = 24423, [2] = 24577, [3] = 24578, [4] = 24579, [5] = 27051},
        },
      [14] = { --Charge
        serverIndex = 14,
        column = 4, row = 1,
        ranks = {
          [1] = 7371, [2] = 26177, [3] = 26178, [4] = 26179, [5] = 26201, [6] = 27685},
        },
      [15] = { --Prowl
        serverIndex = 15,
        column = 4, row = 3,
        ranks = {
          [1] = 24450, [2] = 24452, [3] = 24453},
        },
      [16] = { --Thunderstomp
        serverIndex = 16,
        column = 4, row = 1,
        ranks = {
          [1] = 26090, [2] = 26187, [3] = 26188, [4] = 27063},
        },
      [17] = { --Scorpid Poison
        serverIndex = 17,
        column = 4, row = 1,
        ranks = {
          [1] = 24640, [2] = 24583, [3] = 24586, [4] = 24587, [5] = 27060},
        },
      [18] = { --Shell Shield
        serverIndex = 18,
        column = 4, row = 1,
        ranks = {
          [1] = 26064},
        },
      [19] = { --Lightning Breath
        serverIndex = 19,
        column = 4, row = 1,
        ranks = {
          [1] = 24844, [2] = 25008, [3] = 25009, [4] = 25010, [5] = 25011, [6] = 25012},
        },
      [20] = { --Furious Howl
        serverIndex = 20,
        column = 4, row = 1,
        ranks = {
          [1] = 24604, [2] = 24605, [3] = 24603, [4] = 24597},
        },
      [21] = { --Fire Breath
        serverIndex = 21,
        column = 4, row = 1,
        ranks = {
          [1] = 34889, [2] = 35323},
        },
      [22] = { --Warp
        serverIndex = 22,
        column = 2, row = 2,
        ranks = {
          [1] = 35346},
        },
      [23] = { --Poison Spit
        serverIndex = 23,
        column = 4, row = 1,
        ranks = {
          [1] = 35387, [2] =  35389, [3] = 35392},
        },
      [24] = { --Gore
        serverIndex = 24,
        column = 4, row = 1,
        ranks = {
          [1] = 35290, [2] = 35291, [3] = 35292, [4] = 35293,
          [5] = 35294, [6] = 35295, [7] = 35296,  [8] = 35297, [9] = 35298 },
        },
    },
  }
 
  local function deep_copy(t, seen)
    local result = {}
    seen = seen or {}
    seen[t] = result
    for key, value in pairs(t) do
        if type(value) == "table" then
            result[key] = seen[value] or deep_copy(value, seen)
        else
            result[key] = value
        end
    end
    return result
  end

	local spelldata = {
    --[[legend:
    ! = move over 1 talent box
    ' = new line and 2 boxes over
    " = tab over 2 boxes
    | = next tree
    ; = next rank    
    , = next talent square
    % = force next line
    & = force next line and 1 box over
    a-i = require talent letter count back in the list
    --]]
		--no DK in Vanilla
    --    DEATHKNIGHT = "",
    [0] = {  --Vanilla
      WARRIOR = --Arms tree
      "12282;12663;12664,16462;16463;16464;16465;16466,12286;12658;12659,"..
      "%12285;12697,12295;12676;12677;12678;12679,!12287;12665;12666,"..
      "12290;12963,c12296,f12834;12849;12867,"..
      "&12163;12711;12712;12713;12714,b16493;16494,"..
      "%12700;12781;12783;12784;12785,12292,12284;12701;12702;12703;12704,12281;12812;12813;12814;12815,"..
      "12165;12830;12831;12832;12833,!12289;12668;23695,"..
      "&e12294|"..
      --Fury Tree
      "!12321;12835;12836;12837;12838,12320;12852;12853;12855;12856,"..
      "&12324;12876;12877;12878;12879,12322;12999;13000;13001;13002,"..
      "%12329;12950;20496,12323,16487;16489;16492,12318;12857;12858;12860;12861,"..
      "23584;23585;23586;23587;23588,20502;20503,12317;13045;13046;13047;13048,"..
      "%12862;12330;20497;20498;20499,12328,!20504;20505,"..
      "20500;20501,!e12319;12971;12972;12973;12974,"..
      "&d23881|"..
      --Prot Tree
      "!12298;12724;12725;12726;12727,12297;12750;12751;12752;12753,"..
      "%12301;12818,!12299;12761;12762;12763;12764,12300;12959;12960;12961;12962,"..
      "c12975,f12945;12307;12944,12797;12799;12800,12303;12788;12789;12791;12792,"..
      "12308;12810;12811,12313;12804;12807,12302;12765,"..
      "%12312;12803,12809,12311;12985,"..
      "'16538;16539;16540;16541;16542,"..
      "&c23922",
      ROGUE = --Assassination Tree
      '14162;14163;14164,14144;14148,14138;14139;14140;14141;14142,'..
      '%14156;14160;14161,14158;14159,!14165;14166;14167,'..
      '14179,14168;14169,f14128;14132;14135;14136;14137,'..
      '&16513;16514;16515;16719;16720,14113;14114;14115;14116;14117,'..
      '&14177,14174;14175;14176,'..
      '&b14186;14190;14193;14194;14195,'..
      '&14983|'..
      --Combat Tree
      '13741;13793;13792,13732;13863,13712;13788;13789;13790;13791,'..
      '%13733;13865;13866,13713;13853;13854;13855;13856,13705;13832;13843;13844;13845,'..
      '%13742;13872,c14251,!13743;13875,'..
      '13754;13867,13706;13804;13805;13806;13807,f13715;13848;13849;13851;13852,'..
      '%13709;13800;13801;13802;13803,13877,13960;13961;13962;13963;13964,13707;13966;13967;13968;13969,'..
      '!c30919;30920,18427;18428;18429,'..
      '&13750|'..
      --Subtlety tree
      '!13958;13970;13971;13972;13973,14057;14072;14073;14074;14075,'..
      '%30892;30893,13981;14066,13975;14062;14063;14064;14065,'..
      '%13976;13979;13980,14278,14079;14080;14081,'..
      '%13983;14070;14071,14076;14094;14095,14171;14172;14173,'..
      '%30894;30895,14185,14082;14083,d16511,'..
      '"30902;30903;30904;30905;30906,'..
      '&d14183',
      MAGE = --arcane tree
      "11210;12592,11222;12839;12840;12841;12842,11237;12463;12464;16769;16770,".. 
      "%6057;6085,29441;29444;29445;29446;29447,11213;12574;12575;12576;12577,"..
      "%11247;12606,11242;12467;12469,28574,"..
      "%11252;12605,11255;12598,!18462;18463;18464,"..
      "!12043,e11232;12500;12501;12502;12503,".. 
      "&b15058;15059;15060,"..
      "&a12042|"..
      --fire tree
      "!11069;12338;12339;12340;12341,11103;12357;12358;12359;12360,"..
      "%11119;11120;12846;12847;12848,11100;12353,11078;11080;12342,"..
      "%18459;18460,11108;12349;12350,11366,11083;12351,"..
      "11095;12872;12873,11094;13043,!29074;29075;29076,"..
      "!11115;11367;11368,f11113,"..
      "'11124;12378;12398;12399;12400,"..
      "&c11129|"..
      --frost tree
      "11189;28332,11070;12473;16763;16765;16766,29438;29439;29440,"..
      "%11207;12672;15047;15052;15053,11071;12496;12497,11165;12475,11175;12569;12571,"..
      "11151;12952;12953,12472,!11185;12487;12488,"..
      "16757;16758,11160;12518;12519,g11170;12982;12983;12984;12985,"..
      "&11958,11190;12489;12490,"..
      "'11180;28592;28593;28594;28595,"..
      "&c11426",
      PRIEST = --disc
      "!14522;14788;14789;14790;14791,14524;14525;14526;14527;14528,"..
      "%14523;14784;14785;14786;14787,14749;14767,14748;14768;14769,14531;14774,"..
      "!14751,14521;14776;14777,"..
      "%14747;14770;14771,14520;14780;14781;14782;14783,!14750;14772,"..
      "!18551;18552;18553;18554;18555,e14752,"..
      "'18544;18547;18548;18549;18550,"..
      "&c10060|"..
      --holy
      "14913;15012,14908;15020;17191,14889;15008;15009;15010;15011,"..
      "&27900;27901;27902;27903;27904,18530;18531;18533;18534;18535,"..
      "%15237,27811;27815;27816,!14892;15362;15363,"..
      "27789;27790,14912;15013;15014,f14909;15017,"..
      "%14911;15018,20711,14901;15028;15029;15030;15031,"..
      "'14898;15349;15354;15355;15356,"..
      "&c724|"..
      --shadow
      "!15270;15335;15336;15337;15338,15268;15323;15324;15325;15326,"..
      "%15318;15272;15320,15275;15317,15260;15327;15328;15329;15330,"..
      "%15392;15448,15273;15312;15313;15314;15316,15407,"..
      "&15274;15311,17322;17323;17325,15257;15331;15332;15333;15334,"..
      "f15487,15286,a27839;27840,"..
      "'15259;15307;15308;15309;15310,"..
      "&c15473",
      WARLOCK = --afflic
      '!18174;18175;18176;18177;18178,17810;17811;17812;17813;17814,'..
      '%18179;18180;18181,18213;18372,18182;18183,17804;17805;17806;17807;17808,'..
      '18827;18829;18830,17783;17784;17785;17786;17787,18288,'..
      '%18218;18219,18094;18095,!17864;18393,'..
      '!18265,e18223,a18310;18311;18312;18313,'..
      '!c18271;18272;18273;18274;18275,'..
      '&18220|'..
      --Demo 
      '18692;18693,18694;18695;18696,18697;18698;18699;18700;18701,'..
      '%18703;18704,18705;18706;18707,18731;18743;18744;18745;18746,'..
      '%18754;18755;18756,18708,18748;18749;18750;18751;18752,'..
      '&b18709;18710,18769;18770;18771;18772;18773,'..
      '%18821;18822;18823;18824;18825,18788,!18767;18768,'..
      '"d23785;23822;23823;23824;23825,'..
      '&c19028,18774;18775|'.. 
      --destro
      "!17793;17796;17801;17802;17803,17778;17779;17780;17781;17782,"..
      "&17788;17789;17790;17791;17792,18119;18120;18121;18122;18123,"..
      "%18126;18127,18128;18129,18130;18131;18132;18133;18134,17877,"..
      "18135;18136,17917;17918,!17927;17929;17930;17931;17932,"..
      "c18096;18073,17815;17833;17834;17835;17836,g17959,"..
      "'17954;17955;17956;17957;17958,"..
      "&c17962",
      HUNTER = --bm
      '!19552;19553;19554;19555;19556,19583;19584;19585;19586;19587,'..
      '%19557;19558,19549;19550;19551;24386;24387,19609;19610;19612,24443;19575,'..
      '19559;19560,19596,19616;19617;19618;19619;19620,'..
      '&19572;19573,19598;19599;19600;19601;19602,'..
      '%19578;20895,19577,!19590;19592,'..
      '"d19621;19622;19623;19624;19625,'..
      '&c19574|'.. 
      --mm
      "!19407;19412;19413;19414;19415,19416;19417;19418;19419;19420,"..
      "&19421;19422;19423;19424;19425,19426;19427;19429;19430;19431,"..
      "%19434,19454;19455;19456;19457;19458,!19498;19499;19500,"..
      "!19464;19465;19466;19467;19468,e19485;19487;19488;19489;19490,"..
      "%19503,19461;19462;24691,19491;19493;19494,"..
      "'19507;19508;19509;19510;19511,"..
      "&c19506|"..
      --surv
      "24293;24294;24295,19151;19152;19153,19295;19297;19298;19301;19300,"..
      "%19184;19387;19388;19389;19390,19159;19160,19228;19232;19233;19234;19235,"..
      "%19239;19245,19255;19256;19257;19258;19259,19263,"..
      "%19376;19377,19290;19294;24283,!19286;19287,"..
      "!19370;19371;19373,e19306,"..
      "'19168;19180;19181;24296;24297,"..
      "&c19386",
      DRUID = --bal
      '16814;16815;16816;16817;16818,16689,a17245;17247;17248;17249,'..
      '%16918;16919;16920,16821;16822;16823;16824;16825,16902;16903;16904;16905;16906,16833;16834;16835,'..
      '16836;16839;16840,!c16864,16819;16820,'..
      '!f16909;16910;16911;16912;16913,16850;16923;16924;16925;16926,'..
      '&16880,16845;16846;16847,'..
      '&b16896;16897;16899;16900;16901,'..
      '&24858|'..
      --feral
      '!16934;16935;16936;16937;16938,16858;16859;16860;16861;16862,'..
      '%16947;16948;16949;16950;16951,16940;16941,16929;16930;16931;16932;16933,'..
      '%17002;24866,16979,16942;16943;16944,'..
      '%16966;16968,16972;16974;16975,c16952;16954,d16958;16961,'..
      '16998;16999,!16857,'..
      '&e17003;17004;17005;17006;24894,'..
      '&17007|'..
      --resto
      '!17050;17051;17053;17054;17055,17056;17058;17059;17060;17061,'..
      '%17069;17070;17071;17072;17073,17063;17065;17066;17067;17068,17079;17082,'..
      '&17106;17107;17108,5570,17118;17119;17120;17121;17122,'..
      '!24968;24969;24970;24971;24972,!17111;17112;17113,'..
      'h17116,!e17104;24943;24944;24945;24946,17123;17124,'..
      '"17074;17075;17076;17077;17078,'..
      '&f18562',
      SHAMAN = --Elemental
      "!16039;16109;16110;16111;16112,16035;16105;16106;16107;16108,"..
      "%16043;16130,28996;28997;28998,16038;16160;16161,"..
      "%16164,16040;16113;16114;16115;16116,16041;16117;16118;16119;16120,"..
      "%16086;16544,29062;29064;29065,!30160;29179;29180,"..
      "28999;29000,16089,"..
      "'f16578;16579;16580;16581;16582,"..
      "&b16166|"..
      --enh
      "!17485;17486;17487;17488;17489,16253;16298;16299;16300;16301,"..
      "%16258;16293,16255;16302;16303;16304;16305,16262;16287,16261;16290;16291,"..
      "16259;16295,!16269,16254;16271;16272;16273;16274,"..
      "!f16256;16281;16282;16283;16284,16252;16306;16307;16308;16309,"..
      "%29192;29193,16266;29079;29080,16268,"..
      "'29082;29084;29086;29087;29088,"..
      "&c17364|"..
      --resto
      "!16182;16226;16227;16228;16229,16179;16214;16215;16216;16217,"..
      "%16184;16209,16176;16235;16240,16173;16222;16223;16224;16225,"..
      "%16180;16196;16198,16181;16230;16232;16233;16234,16189,29187;29189;29191,"..
      "!16187;16205;16206;16207;16208,16194;16218;16219;16220;16221,"..
      "%29206;29205;29202,!16188,"..
      "'16178;16210;16211;16212;16213,"..
      "&e16190",
      PALADIN = --holy
      "!20262;20263;20264;20265;20266,20257;20258;20259;20260;20261,"..
      "&20205;20206;20207;20209;20208,20224;20225;20330;20331;20332,"..
      "%20237;20238;20239,26573,20234;20235,9453;25836,"..
      "!20210;20212;20213;20214;20215,20244;20245,"..
      "&b20216,20359;20360;20361,"..
      "'5923;5924;5925;5926;25829,"..
      "&c20473|"..
      --prot
      "!20138;20139;20140;20141;20142,20127;20130;20135;20136;20137,"..
      "%20189;20192;20193,20174;20175,!20143;20144;20145;20146;20147,"..
      "20217,20468;20469;20470,f20148;20149;20150,20096;20097;20098;20099;20100,"..
      "!20487;20488;20489,20254;20255;20256,"..
      "&20911,20177;20179;20181;20180;20182,"..
      "'20196;20197;20198;20199;20200,"..
      "&c20925|"..
      --Ret 
      "!20042;20045;20046;20047;20048,20101;20102;20103;20104;20105,"..
      "%25956;25957,20335;20336;20337,20060;20061;20062;20063;20064,"..
      "%9452;26016;26021,20117;20118;20119;20120;20121,20375,26022;26023,"..
      "9799;25988,!20091;20092,"..
      "%20111;20112;20113,!20218,"..
      "&g20049;20056;20057;20058;20059,"..
      "&20066",
      Bat = {deep_copy(AllPets[0])},
      Bear = {deep_copy(AllPets[0])},
      Boar = {deep_copy(AllPets[0])},
      Cat = {deep_copy(AllPets[0])},
      Crab = {deep_copy(AllPets[0])},
      Crocolisk = {deep_copy(AllPets[0])},
      Gorilla = {deep_copy(AllPets[0])},
      Hyena = {deep_copy(AllPets[0])},
      Raptor = {deep_copy(AllPets[0])},
      Scorpid = {deep_copy(AllPets[0])},
      Spider = {deep_copy(AllPets[0])},
      Tallstrider = {deep_copy(AllPets[0])},
      Turtle = {deep_copy(AllPets[0])},
      Wolf = {deep_copy(AllPets[0])},
      ["Bird of Prey"] = {deep_copy(AllPets[0])},
      ["Carrion Bird"] = {deep_copy(AllPets[0])},
      ["Wind Serpent"] = {deep_copy(AllPets[0])},
	  },
    [1] = { --TBC
		HUNTER = 
		-- Beast master
		"!19552;19553;19554;19555;19556,19583;19584;19585;19586;19587,"..
		"%35029;35030,19549;19550;19551,19609;19610;19612,24443;19575,"..
		"19559;19560,19596,19616;19617;19618;19619;19620,"..
		"&19572;19573,19598;19599;19600;19601;19602,"..
		"%19578;20895,19577,!19590;19592,"..
		"34453;34454,!e19621;19622;19623;19624;19625,"..
		"%34455;34459;34460,e19574,34462;34464;34465,"..
		"'34466;34467;34468;34469;34470,"..
		"&c34692|"..
		-- Marksmanship
		"!19407;19412;19413;19414;19415,19426;19427;19429;19430;19431,"..
		"&19421;19422;19423;19424;19425,19416;19417;19418;19419;19420,"..
		"%34950;34954,19454;19455;19456;19457;19458,19434,34948;34949,"..
		"!19464;19465;19466;19467;19468,c19485;19487;19488;19489;19490,"..
		"%35100;35102;35103,19503,19461;19462;24691,"..
		'%34475;34476,"19507;19508;19509;19510;19511,'..
		"34482;34483;34484,e19506,e35104;35110;35111,"..
		"&34485;34486;34487;34488;34489,"..
		"&a34490|"..
		-- Survival
		"24293;24294;24295,19151;19152;19153,19498;19499;19500,19159;19160,"..
		"19184;19387;19388,19295;19297;19298;19301;19300,19228;19232;19233,"..
		"%19239;19245,19255;19256;19257;19258;19259,19263,"..
		"%19376;19377,19290;19294;24283,!19286;19287,"..
		"34494;34496,19370;19371;19373,f19306,"..
		"%34491;34492;34493,!19168;19180;19181;24296;24297,"..
		"%34497;34498;34499,e19386,c34500;34502;34503,"..
		"&34506;34507;34508;34838;34839,"..
		"&a23989",
		
		
		
		WARRIOR = 
		-- Arms
		"12282;12663;12664,16462;16463;16464;16465;16466,12286;12658;12659,"..
		"%12285;12697,12300;12959;12960;12961;12962,12287;12665;12666,"..
		"%12290;12963,12296,12834;12849;12867,"..
		"&12163;12711;12712;12713;12714,b16493;16494,"..
		"%12700;12781;12783;12784;12785,12292,12284;12701;12702;12703;12704,12281;12812;12813;12814;12815,"..
		"29888;29889,!12289;12668;23695,29723;29724;29725,"..
		"29836;29859,g12294,29834;29838,"..
		"&b35446;35448;35449;35450;35451,"..
		"&29623|"..
		-- Fury
		"!12321;12835;12836;12837;12838,12320;12852;12853;12855;12856,"..
		"&12324;12876;12877;12878;12879,12322;12999;13000;13001;13002,"..
		"%12329;12950;20496,12323,16487;16489;16492,12318;12857;12858;12860;12861,"..
		"23584;23585;23586;23587;23588,20502;20503,12317;13045;13046;13047;13048,"..
		"%12862;12330,12328,!20504;20505,"..
		"20500;20501,!e12319;12971;12972;12973;12974,"..
		"%29590;29591;29592,e23881,29721;29776,"..
		"'29759;29760;29761;29762;29763,"..
		"&c29801|"..
		-- Protection
		"12301;12818,12295;12676;12677,12297;12750;12751;12752;12753,"..
		"&12298;12724;12725;12726;12727,12299;12761;12762;12763;12764,"..
		"%12975,c12945,12797;12799;12800,12303;12788;12789,"..
		"12308;12810;12811,12313;12804;12807,12302;12765,"..
		"%12312;12803,12809,12311;12958,"..
		"%29598;29599;29600,!16538;16539;16540;16541;16542,"..
		"%29593;29594;29595,e23922,29787;29790;29792,"..
		"&29140;29143;29144;29145;29146,"..
		"&20243",
		
		PALADIN = 
		-- Holy
		"!20262;20263;20264;20265;20266,20257;20258;20259;20260;20261,"..
		"&20205;20206;20207;20209;20208,20224;20225;20330;20331;20332,"..
		"%20237;20238;20239,31821,20234;20235,9453;25836,"..
		"!20210;20212;20213;20214;20215,20244;20245,"..
		"%31822;31823;31824,c20216,20359;20360;20361,"..
		"%31825;31826,!5923;5924;5925;5926;25829,"..
		"%31833;31835;31836,e20473,31828;31829;31830,"..
		"&31837;31838;31839;31840;31841,"..
		"&31842|"..
		-- Protection
		"!20138;20139;20140;20141;20142,20127;20130;20135;20136;20137,"..
		"%20189;20192;20193,20174;20175,!20143;20144;20145;20146;20147,"..
		"20217,20468;20469;20470,f20148;20149;20150,20096;20097;20098;20099;20100,"..
		"31844;31845,20487;20488;20489,20254;20255;20256,"..
		"%31846;31847,20911,20177;20179;20181;20180;20182,"..
		"%31848;31849,!20196;20197;20198;20199;20200,"..
		"%A41021;41026,e20925,31850;31851;31852;31853;31854,"..
		"'31858;31859;31860;31861;31862,"..
		"&c31935|"..
		-- Retribution
		"!20042;20045;20046;20047;20048,20101;20102;20103;20104;20105,"..
		"%25956;25957,20335;20336;20337,20060;20061;20062;20063;20064,"..
		"%9452;26016;26021,20117;20118;20119;20120;20121,20375,26022;26023;44414,"..
		"9799;25988,!20091;20092,31866;31867;31868,"..
		"20111;20112;20113,!20218,a31869;31870,"..
		"!i20049;20056;20057;20058;20059,31876;31877;31878,"..
		"%32043;35396;35397,20066,31871;31872;31873,"..
		"&b31879;31880;31881;31882;31883,"..
		"&35395",
		
		MAGE = 
		-- Arcane
		"11210;12592,11222;12839;12840;12841;12842,11237;12463;12464;16769;16770,".. 
        "%6057;6085,29441;29444;29445;29446;29447,11213;12574;12575;12576;12577,"..
        "%11247;12606,11242;12467;12469,!28574,"..
        "11252;12605,11255;12598,!18462;18463;18464,"..
		"31569;31570,12043,!11232;12500;12501;12502;12503,"..
		"31574;31575,c15058;15059;15060,l31571;31572;31573,"..
		"%31579;31582;31583,c12042,35578;35581,"..
		"&31584;31585;31586;31587;31588,"..
		"&31589|"..
		-- fire
		"!11069;12338;12339;12340;12341,11103;12357;12358;12359;12360,"..
		"%11119;11120;12846;12847;12848,11100;12353,11078;11080;12342,"..
		"%18459;18460,11108;12349;12350,11366,11083;12351,"..
		"11095;12872;12873,11094;13043,!29074;29075;29076,"..
		"31638;31639;31640,11115;11367;11368,g11113,"..
		"%31641;31642,!11124;12378;12398;12399;12400,"..
		"%34293;34295;34296,e11129,31679;31680,"..
		"'31656;31657;31658;31659;31660,"..
		"&c31661|"..
		-- Frost
		"11189;28332,11070;12473;16763;16765;16766,29438;29439;29440,"..
		"%11207;12672;15047;15052;15053,11071;12496;12497,11165;12475,11175;12569;12571,"..
		"11151;12952;12953,12472,!11185;12487;12488,"..
		"16757;16758,11160;12518;12519,g11170;12982;12983;12984;12985,"..
		"%31667;31668;31669,11958,11190;12489;12490,"..
		"%31670;31672,!11180;28592;28593;28594;28595,"..
		"&d11426,31674;31675;31676;31677;31678,"..
		"&31682;31683;31684;31685;31686,"..
		"&31687",
		
		PRIEST = 
		-- Discipline
		"!14522;14788;14789;14790;14791,14524;14525;14526;14527;14528,"..
		"%14523;14784;14785;14786;14787,14749;14767,14748;14768;14769,14531;14774,"..
		"33167;33171;33172,14751,14521;14776;14777,"..
		"%14747;14770;14771,14520;14780;14781;14782;14783,!14750;14772,"..
		"!18551;18552;18553;18554;18555,e14752,a33174;33182,"..
		"33186;33190,!18544;18547;18548;18549;18550,"..
		"%45234;45243;45244,f10060,33201;33202;33203;33204;33205,"..
		"&34908;34909;34910;34911;34912,"..
		"&33206|"..
		-- Holy
		"14913;15012,14908;15020;17191,14889;15008;15009;15010;15011,"..
		"&27900;27901;27902;27903;27904,18530;18531;18533;18534;18535,"..
		"%15237,27811;27815;27816,!14892;15362;15363,"..
		"27789;27790,14912;15013;15014,f14909;15017,"..
		"%14911;15018,20711,14901;15028;15029;15030;15031,"..
		"%33150;33154,!14898;15349;15354;15355;15356,"..
		"%34753;34859;34860,e724,33142;33145;33146,"..
		"&33158;33159;33160;33161;33162,"..
		"&34861|"..
		-- Shadow
		"!15270;15335;15336;15337;15338,15268;15323;15324;15325;15326,"..
		"%15318;15272;15320,15275;15317,15260;15327;15328;15329;15330,"..
		"%15392;15448,15273;15312;15313;15314;15316,15407,"..
		"&15274;15311,17322;17323,15257;15331;15332;15333;15334,"..
		"f15487,15286,a27839;27840,33213;33214;33215,"..
		"14910;33371,!15259;15307;15308;15309;15310,"..
		"&e15473,33221;33222;33223;33224;33225,"..
		"'33191;33192;33193;33194;33195,"..
		"&c34914",
		
		WARLOCK = 
		-- Affliction
		"!18174;18175;18176;18177;18178,17810;17811;17812;17813;17814,"..
		"%18179;18180,18213;18372,18182;18183,17804;17805,"..
		"18827;18829,17783;17784;17785;17786;17787,18288,"..
		"%18218;18219,18094;18095,!32381;32382;32383,"..
		"32385;32387;32392;32393;32394,18265,f18223,"..
		"&b18271;18272;18273;18274;18275,"..
		"&30060;30061;30062;30063;30064,18220,"..
		"%30054;30057,!32477;32483;32484,"..
		"&d30108|"..
		-- Demonology
		"18692;18693,18694;18695;18696,18697;18698;18699;18700;18701,"..
		"%18703;18704,18705;18706;18707,18731;18743;18744,"..
		"%18754;18755;18756,18708,18748;18749;18750,30143;30144;30145,"..
		"!c18709;18710,18769;18770;18771;18772;18773,"..
		"%18821;18822,18788,!18767;18768,"..
		"30326;30327;30328,!e23785;23822;23823;23824;23825,"..
		"%30319;30320;30321,e19028,35691;35692;35693,"..
		"&30242;30245;30246;30247;30248,"..
		"&30146|"..
		-- Destruction
		"!17793;17796;17801;17802;17803,17778;17779;17780;17781;17782,"..
		"&17788;17789;17790;17791;17792,18119;18120;18121;18122;18123,"..
		"%18126;18127,18128;18129,18130;18131;18132;18133;18134,17877,"..
		"18135;18136,17917;17918,!17927;17929;17930,"..
		"c18096;18073,17815;17833;17834;17835;17836,g17959,"..
		"%30299;30301;30302,!17954;17955;17956;17957;17958,"..
		"%34935;34938;34939,e17962,30293;30295;30296,"..
		"&30288;30289;30290;30291;30292,"..
		"&a30283",
		
		DRUID = 
		-- balance
	  '16814;16815;16816;16817;16818,16689,a17245;17247;17248;17249,'..
      '%16918;16919;16920,35363;35364,16821;16822,'..
      '%16836;16839;16840,!5570,16819;16820,'..
      '!e16909;16910;16911;16912;16913,16850;16923;16924,'..
      '%33589;33590;33591,16880,16845;16846;16847,'..
      '&b16896;16897;16899;16900;16901,33592;33596,'..
      '%33597;33599;33956,24858,33600;33601;33602,'..
      '&33603;33604;33605;33606;33607,'..
      '&33831|'..
      
      -- feral
      '!16934;16935;16936;16937;16938,16858;16859;16860;16861;16862,'..
      '%16947;16948;16949,16940;16941,16929;16930;16931,'..
      '%17002;24866,16979,16942;16943;16944,'..
      '%16966;16968,16972;16974;16975,c37116;37117,'..
      '%16998;16999,!16857,33872;33873,'..
      '!e17003;17004;17005;17006;24894,33853;33855;33856,'..
      '%33851;33852;33957,17007,a34297;34300,'..
      "'33859;33866;33867;33868;33869,"..
      '&c33917|'..
      
      -- resto 
      '!17050;17051;17053;17054;17055,17056;17058;17059;17060;17061,'..
      '%17069;17070;17071;17072;17073,17063;17065;17066;17067;17068,16833;16834;16835,'..
      '%17106;17107;17108,17118;17119;17120;17121;17122,16864,'..
      '&24968;24969;24970;24971;24972,17111;17112;17113,'..
      '%e17116,17104;24943;24944;24945;24946,!17123;17124,'..
      '33879;33880,!e17074;17075;17076;17077;17078,'..
      '%34151;34152;34153,e18562,33881;33882;33883,'..
      '&33886;33887;33888;33889;33890,'..
      '&a33891',
	  
		SHAMAN = 
		-- Elemental
		"!16039;16109;16110;16111;16112,16035;16105;16106;16107;16108,"..
		"%16043;16130,28996;28997;28998,16038;16160;16161,"..
		"%16164,16040;16113;16114;16115;16116,16041;16117;16118;16119;16120,"..
		"%16086;16544,29062;29064;29065,!30160;29179;29180,"..
		"28999;29000,16089,!30664;30665;30666;30667;30668,"..
		"30672;30673;30674,!h16578;16579;16580;16581;16582,"..
		"&d16166,30669;30670;30671,"..
		"&30675;30678;30679;30680;30681,"..
		"&a30706|"..
		-- Enhancement
		"!17485;17486;17487;17488;17489,16253;16298;16299;16300;16301,"..
		"%16258;16293,16255;16302;16303;16304;16305,16262;16287,16261;16290;16291,"..
		"16259;16295,!43338,16254;16271;16272;16273;16274,"..
		"!f16256;16281;16282;16283;16284,16252;16306;16307;16308;16309,"..
		"%29192;29193,16268,16266;29079;29080,"..
		'%30812;30813;30814,"29082;29084;29086;29087;29088,'..
		"A30816;30818;30819,e30798,e17364,"..
		"&30802;30808;30809;30810;30811,"..
		"&30823|"..
		-- Resto
		"!16182;16226;16227;16228;16229,16179;16214;16215;16216;16217,"..
		"%16184;16209,16176;16235;16240,16173;16222;16223;16224;16225,"..
		"%16180;16196;16198,16181;16230;16232;16233;16234,16189,29187;29189;29191,"..
		"!16187;16205;16206;16207;16208,16194;16218;16219;16220;16221,"..
		"%29206;29205;29202,!16188,30864;30865;30866,"..
		'"16178;16210;16211;16212;16213,'..
		"&f16190,30881;30883;30884;30885;30886,"..
		"&30867;30868;30869,30872;30873,"..
		"&b974",
		
		ROGUE = 
		-- Assassination
		"14162;14163;14164,14144;14148,14138;14139;14140;14141;14142,"..
		"%14156;14160;14161,14158;14159,!13733;13865;13866,"..
		"14179,14168;14169,f14128;14132;14135;14136;14137,"..
		"&16513;16514;16515;16719;16720,14113;14114;14115;14116;14117,"..
		"%31208;31209,14177,14174;14175;14176,31244;31245,"..
		"!c14186;14190;14193;14194;14195,31226;31227,"..
		"&14983,31380;31382;31383;31384;31385,"..
		"'31233;31239;31240;31241;31242,"..
		"&c1329|"..
		-- Combat
		"13741;13793;13792,13732;13863,13712;13788;13789;13790;13791,"..
		"%14165;14166;14167,13713;13853;13854;13855;13856,13705;13832;13843;13844;13845,"..
		"%13742;13872,c14251,!13743;13875,"..
		"13754;13867,13706;13804;13805;13806;13807,f13715;13848;13849;13851;13852,"..
		"%13709;13800;13801;13802;13803,13877,13960;13961;13962;13963;13964,13707;13966;13967;13968;13969,"..
		"31124;31126,d30919;30920,18427;18428;18429,"..
		"%31122;31123,13750,31130;31131,"..
		"'35541;35550;35551;35552;35553,"..
		"&c32601|"..
		-- Sublety
		"!13958;13970;13971;13972;13973,14057;14072;14073;14074;14075,"..
		"%30892;30893,14076;14094,13975;14062;14063;14064;14065,"..
		"%13976;13979;13980,14278,14079;14080;14081,"..
		"%13983;14070;14071,13981;14066,14171;14172;14173,"..
		"%30894;30895,14185,14082;14083,d16511,"..
		"31221;31222;31223,!30902;30903;30904;30905;30906,"..
		"%31211;31212;31213,f14183,31228;31229;31230,"..
		"&b31216;31217;31218;31219;31220,"..
		"&36554",
		Bat = {deep_copy(AllPets[1])},
		Bear = {deep_copy(AllPets[1])},
		Boar = {deep_copy(AllPets[1])},
		Cat = {deep_copy(AllPets[1])},
		Crab = {deep_copy(AllPets[1])},
		Crocolisk = {deep_copy(AllPets[1])},
		Dragonhawk = {deep_copy(AllPets[1])},
		Gorilla = {deep_copy(AllPets[1])},
		Hyena = {deep_copy(AllPets[1])},
		Raptor = {deep_copy(AllPets[1])},
		Ravager = {deep_copy(AllPets[1])},
		Scorpid = {deep_copy(AllPets[1])},
		Serpent = {deep_copy(AllPets[1])},
		Spider = {deep_copy(AllPets[1])},
		Sporebat= {deep_copy(AllPets[1])},
		Tallstrider = {deep_copy(AllPets[1])},
		Turtle = {deep_copy(AllPets[1])},
		Wolf = {deep_copy(AllPets[1])},
		["Bird of Prey"] = {deep_copy(AllPets[1])},
		["Carrion Bird"] = {deep_copy(AllPets[1])},
		["Nether Ray"] = {deep_copy(AllPets[1])},
		["Warp Striker"] = {deep_copy(AllPets[1])},
		["Wind Serpent"] = {deep_copy(AllPets[1])},
    },
    [2] = {  --Wrath
      DEATHKNIGHT = "48979;49483,48997;49490;49491,49182;49500;49501;55225;55226,%48978;49390;49391;49392;49393,49004;49508;49509,55107;55108,%48982,48987;49477;49478;49479;49480,49467;50033;50034,%c48985;49488;49489,!49145;49495;49497,49015;50154;55136,48977;49394;49395,!49006;49526;50029,49005,!h48988;49503;49504,53137;53138,%49027;49542;49543,49016,50365;50371,%62905;62908,49018;49529;49530,55233,%49189;50149;50150,55050,49023;49533;49534,&61154;61155;61156;61157;61158,&49028|49175;50031;51456,49455;50147,49042;49786;49787;49788;49789,&55061;55062,49140;49661;49662;49663;49664,49226;50137;50138,f50880;50884;50885;50886;50887,49039,51468;51472;51473,&51123;51127;51128;51129;51130,49149;50115,49137;49657,!49186;51108;51109,49471;49790;49791,49796,i55610,49024;49538,49188;56822;59057,%50040;50041;50043,49203,50384;50385,%65661;66191;66192,54639;54638;54637,51271,%49200;50151;50152,49143,50187;50190;50191,&49202;50127;50128;50129;50130,&49184|51745;51746,48962;49567;49568,55129;55130;55131;55132;55133,%49036;49562,48963;49564;49565,49588;49589,48965;49571;49572,49013;55236;55237,51459;51462;51463;51464;51465,49158,&49146;51267,49219;49627;49628,55620;55623,49194,49220;49633;49635;49636;49638,49223;49599,%55666;55667,49224;49610;49611,49208;56834;56835,g52143,66799;66814;66815;66816;66817,d51052,50391;50392,d63560,!49032;49631;49632,49222,%49217;49654;49655,c51099;51160;51161,55090,&50117;50118;50119;50120;50121,&49206",
      WARRIOR = '12282;12663;12664,16462;16463;16464;16465;16466,12286;12658,%12285;12697,12300;12959;12960,12295;12676;12677,%12290;12963,12296,16493;16494,a12834;12849;12867,!12163;12711;12712,56636;56637;56638,%12700;12781;12783;12784;12785,12328,12284;12701;12702;12703;12704,12281;12812;12813;12814;12815,20504;20505,!12289;12668;23695,46854;46855,29834;29838,g12294,46865;46866,12862;12330,64976,d35446;35448;35449,46859;46860,%29723;29725;29724,29623,29836;29859,&46867;56611;56612;56613;56614,&46924|61216;61221;61222,12321;12835,12320;12852;12853;12855;12856,&12324;12876;12877;12878;12879,12322;12999;13000;13001;13002,%12329;12950;20496,12323,16487;16489;16492,12318;12857;12858;12860;12861,23584;23585;23586;23587;23588,20502;20503,12317;13045;13046;13047;13048,%29590;29591;29592,12292,29888;29889,%20500;20501,!12319;12971;12972;12973;12974,%46908;46909;56924,e23881,!29721;29776,46910;46911,"29759;29760;29761;29762;29763,60970,e29801,f46913;46914;46915,&56927;56929;56930;56931;56932,&46917|12301;12818,12298;12724;12725;12726;12727,12287;12665;12666,&50685;50686;50687,12297;12750;12751;12752;12753,%12975,12797;12799,29598;29599,12299;12761;12762;12763;12764,59088;59089,12313;12804,12308;12810;12811,%12312;12803,12809,12311;12958,\'16538;16539;16540;16541;16542,%29593;29594,d50720,29787;29790;29792,&29140;29143;29144,46945;46949,%57499,20243,47294;47295;47296,&b46951;46952;46953,58872;58874,&46968',
      ROGUE = "14162;14163;14164,14144;14148,14138;14139;14140;14141;14142,%14156;14160;14161,51632;51633,!13733;13865;13866,14983,14168;14169,f14128;14132;14135;14136;14137,&16513;16514;16515,14113;14114;14115;14116;14117,%31208;31209,14177,14174;14175;14176,31244;31245,!c14186;14190;14193;14194;14195,14158;14159,%51625;51626,58426,31380;31382;31383,%51634;51635;51636,!31234;31235;31236,%31226;31227;58410,e1329,51627;51628;51629,&51664;51665;51667;51668;51669,&51662|13741;13793;13792,13732;13863,13715;13848;13849;13851;13852,%14165;14166,13713;13853;13854,!13705;13832;13843;13844;13845,13742;13872,c14251,f13706;13804;13805;13806;13807,%13754;13867,13743;13875,13712;13788;13789,18427;18428;18429;61330;61331,13709;13800;13801;13802;13803,13877,13960;13961;13962;13963;13964,&b30919;30920,31124;31126,%31122;31123;61329,13750,31130;31131,%5952;51679,!35541;35550;35551;35552;35553,%51672;51674,e32601,51682;58413,&51685;51686;51687;51688;51689,&51690|14179;58422;58423;58424;58425,13958;13970;13971,14057;14072,%30892;30893,14076;14094,13975;14062;14063,%13981;14066,14278,14171;14172;14173,%13983;14070;14071,13976;13979;13980,14079;14080,%30894;30895,14185,14082;14083,g16511,31221;31222;31223,!30902;30903;30904;30905;30906,%31211;31212;31213,f14183,31228;31229;31230,&b31216;31217;31218;31219;31220,51692;51696,%51698;51700;51701,36554,58414;58415,&51708;51709;51710;51711;51712,&51713",
      MAGE = "11210;12592,11222;12839;12840,11237;12463;12464;16769;16770,%28574;54658;54659,29441;29444,11213;12574;12575;12576;12577,%11247;12606,11242;12467;12469,44397;44398;44399,54646,11252;12605,11255;12598,18462;18463;18464,29447;55339;55340,31569;31570,12043,!11232;12500;12501;12502;12503,31574;31575;54354,c15058;15059;15060,d31571;31572,%31579;31582;31583,c12042,44394;44395;44396,&b44378;44379,31584;31585;31586;31587;31588,&31589,44404;54486;54488;54489;54490,&44400;44402;44403,35578;35581,&44425|11078;11080,18459;18460;54734,11069;12338;12339;12340;12341,%11119;11120;12846;12847;12848,54747;54749,11108;12349;12350,%11100;12353,11103;12357;12358,11366,11083;12351,11095;12872;12873,11094;13043,!29074;29075;29076,31638;31639;31640,11115;11367;11368,g11113,%31641;31642,!11124;12378;12398;12399;12400,%34293;34295;34296,e11129,31679;31680,%64353;64357,!31656;31657;31658,%A44442;44443,e31661,44445;44446;44448,&44449;44469;44470;44471;44472,&44457|11071;12496;12497,11070;12473;16763;16765;16766,31670;31672;55094,%11207;12672;15047,11189;28332,29438;29439;29440,11175;12569;12571,11151;12952;12953,12472,11185;12487;12488,%16757;16758,11160;12518;12519,11170;12982;12983,&11958,11190;12489;12490,31667;31668;31669,c55091;55092,!11180;28592;28593,%A44745;54787,f11426,31674;31675;31676;31677;31678,&31682;31683,44543;44545,%44546;44548;44549,31687,a44557;44560;44561,&44566;44567;44568;44570;44571,&44572",
      PRIEST = "!14522;14788;14789;14790;14791,47586;47587;47588;52802;52803,%14523;14784;14785,14747;14770;14771,14749;14767,14531;14774,14521;14776;14777,14751,14748;14768;14769,%33167;33171;33172,14520;14780;14781,!14750;14772,33201;33202,18551;18552;18553;18554;18555,f63574,%33186;33190,!34908;34909;34910,%45234;45243;45244,e10060,63504;63505;63506,%57470;57472,47535;47536;47537,47507;47508,%47509;47511;47515,33206,47516;47517,&52795;52797;52798;52799;52800,&47540|14913;15012,14908;15020;17191,14889;15008;15009;15010;15011,&27900;27901;27902;27903;27904,18530;18531;18533;18534;18535,%19236,27811;27815;27816,!14892;15362;15363,27789;27790,14912;15013;15014,f14909;15017,%14911;15018,20711,14901;15028;15029;15030;15031,%33150;33154,!14898;15349;15354;15355;15356,%34753;34859;34860,e724,33142;33145;33146,%64127;64129,33158;33159;33160;33161;33162,63730;63733;63737,%63534;63542;63543,34861,47558;47559;47560,&47562;47564;47565;47566;47567,&47788|15270;15335;15336,a15337;15338,15259;15307;15308;15309;15310,%15318;15272;15320,15275;15317,15260;15327;15328,%15392;15448,15273;15312;15313;15314;15316,15407,&15274;15311,17322;17323,15257;15331;15332,f15487,15286,a27839;27840,33213;33214;33215,14910;33371,!63625;63626;63627,&e15473,33221;33222;33223;33224;33225,%b47569;47570,!33191;33192;33193,%64044,e34914,47580;47581;47582,'47573;47577;47578;51166;51167,&c47585",
      WARLOCK = "18827;18829,18174;18175;18176,17810;17811;17812;17813;17814,%18179;18180,18213;18372,18182;18183,17804;17805,53754;53759,17783;17784;17785,18288,%18218;18219,18094;18095,!32381;32382;32383,32385;32387;32392;32393;32394,63108,f18223,%54037;54038,c18271;18272;18273;18274;18275,%47195;47196;47197,30060;30061;30062;30063;30064,18220,%30054;30057,!32477;32483;32484,%47198;47199;47200,e30108,a58435,&47201;47202;47203;47204;47205,&48181|18692;18693,18694;18695;18696,18697;18698;18699,47230;47231,18703;18704,18705;18706;18707,18731;18743;18744,%18754;18755;18756,19028,18708,30143;30144;30145,!c18769;18770;18771;18772;18773,c18709;18710,%b30326,!18767;18768,&d23785;23822;23823;23824;23825,47245;47246;47247,%30319;30320;30321,c47193,35691;35692;35693,&30242;30245;30246;30247;30248,63156;63158,%b54347;54348;54349,30146,63117;63121;63123,&47236;47237;47238;47239;47240,&59672|!17793;17796;17801;17802;17803,17788;17789;17790;17791;17792,%18119;18120,63349;63350;63351,17778;17779;17780,%18126;18127,17877,17959;59738;59739;59740;59741,%18135;18136,17917;17918,!17927;17929;17930,c34935;34938;34939,17815;17833;17834,f18130,%30299;30301;30302,!17954;17955;17956;17957;17958,&d17962,30293;30295;30296,18096;18073;63245,!30288;30289;30290;30291;30292,c54117;54118,%e47258;47259;47260,30283,47220;47221;47223,&47266;47267;47268;47269;47270,&50796",
      HUNTER = '!19552;19553;19554;19555;19556,19583;19584;19585;19586;19587,%35029;35030,19549;19550;19551,19609;19610;19612,24443;19575,19559;19560,53265,19616;19617;19618;19619;19620,&19572;19573,19598;19599;19600;19601;19602,%19578;20895,19577,!19590;19592,34453;34454,!e19621;19622;19623;19624;19625,%34455;34459;34460,e19574,34462;34464;34465,%c53252;53253,!34466;34467;34468;34469;34470,%53262;53263;53264,e34692,c53256;53259;53260,&56314;56315;56316;56317;56318,&53270|19407;19412,53620;53621;53622,19426;19427;19429;19430;19431,%34482;34483;34484,19421;19422;19423,19485;19487;19488;19489;19490,%34950;34954,19454;19455;19456,c19434,34948;34949,!19464;19465;19466,19416;19417;19418;19419;19420,%35100;35102,23989,19461;19462;24691,%34475;34476,"19507;19508;19509,53234;53237;53238,e19506,e35104;35110;35111,&34485;34486;34487;34488;34489,53228;53232,%53215;53216;53217,c34490,53221;53222;53224,&53241;53243;53244;53245;53246,&53209|52783;52785;52786;52787;52788,19498;19499;19500,19159;19160,%19290;19294;24283,19184;19387;19388,19376;63457;63458,34494;34496,19255;19256;19257;19258;19259,19503,19295;19297;19298,19286;19287,!56333;56336;56337,!56342;56343;56344,f56339;56340;56341,19370;19371;19373,f19306,%19168;19180;19181;24296;24297,!34491;34492;34493,%b34500;34502;34503,e19386,34497;34498;34499,%34506;34507;34508;34838;34839,c53295;53296;53297,%53298;53299,3674,!53302;53303;53304,"f53290;53291;53292,&c53301',
      DRUID = "!16814;16815;16816;16817;16818,57810;57811;57812;57813;57814,%16845;16846;16847,35363;35364,!16821;16822,16836;16839;16840,c16880;61345;61346,d57865,16819;16820,!16909;16910;16911;16912;16913,16850;16923;16924,%33589;33590;33591,5570,a57849;57850;57851,%33597;33599;33956,16896;16897;16899,33592;33596,&24858,a48384;48395;48396,33600;33601;33602,c48389;48392;48393,!33603;33604;33605;33606;33607,%48516;48521;48525,f50516,33831,48488;48514,!48506;48510;48511,&48505|!16934;16935;16936;16937;16938,16858;16859;16860;16861;16862,%16947;16948;16949,16998;16999,16929;16930;16931,%17002;24866,61336,16942;16943;16944,%16966;16968,16972;16974;16975,c37116;37117,d48409;48410,16940;16941,!49377,33872;33873,57878;57880;57881,g17003;17004;17005;17006;24894,33853;33855;33856,&17007,a34297;34300,33851;33852;33957,c57873;57876;57877,!33859;33866;33867,48483;48484;48485,48492;48494;48495,g33917,a48532;48489;48491,&48432;48433;48434;51268;51269,a63503,&50334|17050;17051,17063;17065;17066,17056;17058;17059;17060;17061,%17069;17070;17071;17072;17073,17118;17119;17120,16833;16834;16835,%17106;17107;17108,16864,c48411;48412,&24968;24969;24970;24971;24972,17111;17112;17113,%e17116,17104;24943;24944;24945;24946,!17123;17124,33879;33880,!e17074;17075;17076;17077;17078,%34151;34152;34153,e18562,33881;33882;33883,&33886;33887;33888;33889;33890,48496;48499;48500,%48539;48544;48545,c65139,a48535;48536;48537,%63410;63411,!51179;51180;51181;51182;51183,&d48438",
      SHAMAN = '!16039;16109;16110;16111;16112,16035;16105;16106;16107;16108,%16038;16160;16161,28996;28997;28998,30160;29179;29180,%16040;16113;16114;16115;16116,16164,16089;60184;60185;60187;60188,%16086;16544,"29062;29064;29065,28999;29000,e16041,!30664;30665;30666,30672;30673;30674,!g16578;16579;16580;16581;16582,&d16166,51483;51485;51486,%63370;63372,c51466;51470,30675;30678;30679,%51474;51478;51479,30706,51480;51481;51482,&62097;62098;62099;62100;62101,&51490|16259;16295;52456,16043;16130,17485;17486;17487;17488;17489,%16258;16293,16255;16302;16303;16304;16305,16262;16287,16261;16290;51881,16266;29079;29080,!43338,16254;16271;16272,!f16256;16281;16282;16283;16284,16252;16306;16307;16308;16309,%29192;29193,16268,51883;51884;51885,%30802;30808;30809,!29082;29084;29086,63373;63374,A30816;30818;30819,f30798,17364,%51525;51526;51527,c60103,c51521;51522,%30812;30813;30814,30823,51523;51524,&51528;51529;51530;51531;51532,&51533|!16182;16226;16227;16228;16229,16173;16222;16223;16224;16225,%16184;16209,29187;29189;29191,16179;16214;16215;16216;16217,%16180;16196;16198,16181;16230;16232,55198,16176;16235;16240,!16187;16205;16206,16194;16218;16219;16220;16221,%29206;29205;29202,!16188,30864;30865;30866,"16178;16210;16211;16212;16213,%30881;30883;30884;30885;30886,g16190,c51886,%51554;51555,30872;30873,30867;30868;30869,%51556;51557;51558,974,a51560;51561,&51562;51563;51564;51565;51566,&61295',
      PALADIN = "!20205;20206;20207;20209;20208,20224;20225;20330;20331;20332,%20237;20238;20239,20257;20258;20259;20260;20261,9453;25836,%31821,20210;20212;20213;20214;20215,20234;20235,%20254;20255;20256,!20244;20245,53660;53661,31822;31823,f20216,20359;20360;20361,%31825;31826,!5923;5924;5925;5926;25829,%31833;31835;31836,e20473,31828;31829;31830,%53551;53552;53553,!31837;31838;31839;31840;31841,%31842,!53671;53673;54151;54154;54155,&f53569;53576,53556;53557,&53563|!63646;63647;63648;63649;63650,20262;20263;20264;20265;20266,%31844;31845;53519,20174;20175,20096;20097;20098;20099;20100,%64205,20468;20469;20470,20143;20144;20145;20146;20147,%c53527;53530,20487;20488,20138;20139;20140,&20911,20177;20179;20181;20180;20182,%31848;31849,!20196;20197;20198,%31785;33776,e20925,31850;31851;31852,%20127;20130;20135,!31858;31859;31860,%53590;53591;53592,e31935,53583;53585,&b53709;53710;53711,53695;53696,&53595|!20060;20061;20062;20063;20064,20101;20102;20103;20104;20105,%25956;25957,20335;20336;20337,20042;20045,%9452;26016,20117;20118;20119;20120;20121,20375,26022;26023,9799;25988,!32043;35396;35397,31866;31867;31868,20111;20112;20113,!31869,&h20049;20056;20057,31871;31872,%53486;53488,20066,31876;31877;31878,&b31879;31880;31881,53375;53376,%53379;53484;53648,35395,53501;53502;53503,&53380;53381;53382,&53385",
      Tenacity = '61682;61683,61685,61686;61687;61688,61689;61690,53182;53183;53184,19596,d53481;53482,d53175;53176,61680;61681;52858,53178;53179,53409;53411,63900,"53450;53451,53427;53429;53430,53478,f53477,d53480,53476,!62764;62765,c62758;62762',
      Cunning = '61682;61683,61684,*23145,61686;61687;61688,61689;61690,19596,e53483;53485,*e53554;53555,53514;53516,53182;53183;53184,61680;61681;52858,53409;53411,54044,&53427;53429;53430,52234;53497,f53511;53512,53508,53517,d53490,53450;53451,d62758;62762,"b53480',
      Ferocity = "61682;61683,61684,*23145,61686;61687;61688,61689;61690,53180;53181,53186;53187,53182;53183;53184,19596,61680;61681;52858,!53409;53411,61685,*52825,!g55709,53203;53204;53205,53427;53429;53430,53401,d53426,d53434,%62759;62760,!b62758;62762",
    },
  }
  
  local function indexSort(k1, k2)
    if k1 and k2 then
      return k1.serverIndex < k2.serverIndex
    end
  end
  
  local function sortPetSkills()
    for class, data in pairs(spelldata[expac]) do
      if type(data) == "table" then
        table.sort(spelldata[expac][class][1], indexSort)
        if table.maxn(spelldata[expac][class][1]) ~= #spelldata[expac][class][1] then
          for i = 1, table.maxn(spelldata[expac][class][1]) do
            if not spelldata[expac][class][1][i] then
              spelldata[expac][class][1][i] = "null"
            end
          end
          for i = #spelldata[expac][class][1], 1, -1 do
            if spelldata[expac][class][1][i] == "null" then
              table.remove(spelldata[expac][class][1], i)
            end
          end
        end
      end
    end
  end
  
  if expac == 0 then  --Vanilla Family Skills
    spelldata[0].Bat[1][2] = deep_copy(FamilySkills[0][2])
    spelldata[0].Bat[1][12] = deep_copy(FamilySkills[0][12])
    spelldata[0].Bat[1][13] = deep_copy(FamilySkills[0][13])
    spelldata[0].Bear[1][2] = deep_copy(FamilySkills[0][2])
    spelldata[0].Bear[1][3] = deep_copy(FamilySkills[0][3])
    spelldata[0].Boar[1][2] = deep_copy(FamilySkills[0][2])
    spelldata[0].Boar[1][6] = deep_copy(FamilySkills[0][6])
    spelldata[0].Boar[1][14] = deep_copy(FamilySkills[0][14])
    spelldata[0].Cat[1][2] = deep_copy(FamilySkills[0][2])
    spelldata[0].Cat[1][3] = deep_copy(FamilySkills[0][3])
    spelldata[0].Cat[1][6] = deep_copy(FamilySkills[0][6])
    spelldata[0].Cat[1][15] = deep_copy(FamilySkills[0][15])
    spelldata[0].Crab[1][3] = deep_copy(FamilySkills[0][3])
    spelldata[0].Crocolisk[1][2] = deep_copy(FamilySkills[0][2])
    spelldata[0].Gorilla[1][2] = deep_copy(FamilySkills[0][2])
    spelldata[0].Gorilla[1][16] = deep_copy(FamilySkills[0][16])
    spelldata[0].Hyena[1][2] = deep_copy(FamilySkills[0][2])
    spelldata[0].Hyena[1][6] = deep_copy(FamilySkills[0][6])
    spelldata[0].Raptor[1][2] = deep_copy(FamilySkills[0][2])
    spelldata[0].Raptor[1][3] = deep_copy(FamilySkills[0][3])
    spelldata[0].Scorpid[1][3] = deep_copy(FamilySkills[0][3])
    spelldata[0].Scorpid[1][17] = deep_copy(FamilySkills[0][17])
    spelldata[0].Spider[1][2] = deep_copy(FamilySkills[0][2])
    spelldata[0].Tallstrider[1][2] = deep_copy(FamilySkills[0][2])
    spelldata[0].Tallstrider[1][6] = deep_copy(FamilySkills[0][6])
    spelldata[0].Turtle[1][2] = deep_copy(FamilySkills[0][2])
    spelldata[0].Turtle[1][18] = deep_copy(FamilySkills[0][18])
    spelldata[0].Wolf[1][2] = deep_copy(FamilySkills[0][2])
    spelldata[0].Wolf[1][6] = deep_copy(FamilySkills[0][6])
    spelldata[0].Wolf[1][20] = deep_copy(FamilySkills[0][20])
    spelldata[0]["Bird of Prey"][1][3] = deep_copy(FamilySkills[0][3])
    spelldata[0]["Bird of Prey"][1][12] = deep_copy(FamilySkills[0][12])
    spelldata[0]["Bird of Prey"][1][13] = deep_copy(FamilySkills[0][13])
    spelldata[0]["Carrion Bird"][1][2] = deep_copy(FamilySkills[0][2])
    spelldata[0]["Carrion Bird"][1][3] = deep_copy(FamilySkills[0][3])
    spelldata[0]["Carrion Bird"][1][12] = deep_copy(FamilySkills[0][12])
    spelldata[0]["Carrion Bird"][1][13] = deep_copy(FamilySkills[0][13])
    spelldata[0]["Wind Serpent"][1][2] = deep_copy(FamilySkills[0][2])
    spelldata[0]["Wind Serpent"][1][12] = deep_copy(FamilySkills[0][12])
    spelldata[0]["Wind Serpent"][1][19] = deep_copy(FamilySkills[0][19])
    sortPetSkills()    
  elseif expac == 1 then --TBC Family Skills
	spelldata[1].Bat[1][2] = deep_copy(FamilySkills[1][2])
    spelldata[1].Bat[1][12] = deep_copy(FamilySkills[1][12])
    spelldata[1].Bat[1][13] = deep_copy(FamilySkills[1][13])
    spelldata[1].Bear[1][2] = deep_copy(FamilySkills[1][2])
    spelldata[1].Bear[1][3] = deep_copy(FamilySkills[1][3])
    spelldata[1].Boar[1][2] = deep_copy(FamilySkills[1][2])
    spelldata[1].Boar[1][6] = deep_copy(FamilySkills[1][6])
    spelldata[1].Boar[1][14] = deep_copy(FamilySkills[1][14])
    spelldata[1].Boar[1][24] = deep_copy(FamilySkills[1][24])
    spelldata[1].Cat[1][2] = deep_copy(FamilySkills[1][2])
    spelldata[1].Cat[1][3] = deep_copy(FamilySkills[1][3])
    spelldata[1].Cat[1][6] = deep_copy(FamilySkills[1][6])
    spelldata[1].Cat[1][15] = deep_copy(FamilySkills[1][15])
    spelldata[1].Crab[1][3] = deep_copy(FamilySkills[1][3])
    spelldata[1].Crocolisk[1][2] = deep_copy(FamilySkills[1][2])
    spelldata[1].Dragonhawk[1][2] = deep_copy(FamilySkills[1][2])
    spelldata[1].Dragonhawk[1][12] = deep_copy(FamilySkills[1][12])
    spelldata[1].Dragonhawk[1][21] = deep_copy(FamilySkills[1][21])
    spelldata[1].Gorilla[1][2] = deep_copy(FamilySkills[1][2])
    spelldata[1].Gorilla[1][16] = deep_copy(FamilySkills[1][16])
    spelldata[1].Hyena[1][2] = deep_copy(FamilySkills[1][2])
    spelldata[1].Hyena[1][6] = deep_copy(FamilySkills[1][6])
    spelldata[1].Raptor[1][2] = deep_copy(FamilySkills[1][2])
    spelldata[1].Raptor[1][3] = deep_copy(FamilySkills[1][3])
    spelldata[1].Ravager[1][2] = deep_copy(FamilySkills[1][2])
    spelldata[1].Ravager[1][6] = deep_copy(FamilySkills[1][6])
    spelldata[1].Ravager[1][24] = deep_copy(FamilySkills[1][24])
    spelldata[1].Scorpid[1][3] = deep_copy(FamilySkills[1][3])
    spelldata[1].Scorpid[1][17] = deep_copy(FamilySkills[1][17])
    spelldata[1].Serpent[1][2] = deep_copy(FamilySkills[1][2])
    spelldata[1].Serpent[1][23] = deep_copy(FamilySkills[1][23])
    spelldata[1].Spider[1][2] = deep_copy(FamilySkills[1][2])
    spelldata[1].Tallstrider[1][2] = deep_copy(FamilySkills[1][2])
    spelldata[1].Tallstrider[1][6] = deep_copy(FamilySkills[1][6])
    spelldata[1].Turtle[1][2] = deep_copy(FamilySkills[1][2])
    spelldata[1].Turtle[1][18] = deep_copy(FamilySkills[1][18])
    spelldata[1].Wolf[1][2] = deep_copy(FamilySkills[1][2])
    spelldata[1].Wolf[1][6] = deep_copy(FamilySkills[1][6])
    spelldata[1].Wolf[1][20] = deep_copy(FamilySkills[1][20])
    spelldata[1]["Bird of Prey"][1][3] = deep_copy(FamilySkills[1][3])
    spelldata[1]["Bird of Prey"][1][12] = deep_copy(FamilySkills[1][12])
    spelldata[1]["Bird of Prey"][1][13] = deep_copy(FamilySkills[1][13])
    spelldata[1]["Carrion Bird"][1][2] = deep_copy(FamilySkills[1][2])
    spelldata[1]["Carrion Bird"][1][3] = deep_copy(FamilySkills[1][3])
    spelldata[1]["Carrion Bird"][1][12] = deep_copy(FamilySkills[1][12])
    spelldata[1]["Carrion Bird"][1][13] = deep_copy(FamilySkills[1][13])
    spelldata[1]["Nether Ray"][1][2] = deep_copy(FamilySkills[1][2])
    spelldata[1]["Nether Ray"][1][12] = deep_copy(FamilySkills[1][12])
    spelldata[1]["Warp Striker"][1][2] = deep_copy(FamilySkills[1][2])
    spelldata[1]["Warp Striker"][1][3] = deep_copy(FamilySkills[1][3])
    spelldata[1]["Warp Striker"][1][22] = deep_copy(FamilySkills[1][22])
    spelldata[1]["Wind Serpent"][1][2] = deep_copy(FamilySkills[1][2])
    spelldata[1]["Wind Serpent"][1][12] = deep_copy(FamilySkills[1][12])
    spelldata[1]["Wind Serpent"][1][19] = deep_copy(FamilySkills[1][19])
    sortPetSkills() 
  end
  
  spelldata = spelldata[expac]
  Talented.spelldata = spelldata
end

-------------------------------------------------------------------------------
-- tabdata.lua
--

-- Generated Data, do not modify
do
	local tabdata = {
  	DEATHKNIGHT = {
			{background = "DeathKnightBlood"},
			{background = "DeathKnightFrost"},
			{background = "DeathKnightUnholy"}
		},
		WARRIOR = {
			{background = "WarriorArms"},
			{background = "WarriorFury"},
			{background = "WarriorProtection"}
		},
		ROGUE = {
			{background = "RogueAssassination"},
			{background = "RogueCombat"},
			{background = "RogueSubtlety"}
		},
		MAGE = {
			{background = "MageArcane"},
			{background = "MageFire"},
			{background = "MageFrost"}
		},
		PRIEST = {
			{background = "PriestDiscipline"},
			{background = "PriestHoly"},
			{background = "PriestShadow"}
		},
		WARLOCK = {
			{background = "WarlockCurses"},
			{background = "WarlockSummoning"},
			{background = "WarlockDestruction"}
		},
		HUNTER = {
			{background = "HunterBeastMastery"},
			{background = "HunterMarksmanship"},
			{background = "HunterSurvival"}
		},
		DRUID = {
			{background = "DruidBalance"},
			{background = "DruidFeralCombat"},
			{background = "DruidRestoration"}
		},
		SHAMAN = {
			{background = "ShamanElementalCombat"},
			{background = "ShamanEnhancement"},
			{background = "ShamanRestoration"}
		},
		PALADIN = {
			{background = "PaladinHoly"},
			{background = "PaladinProtection"},
			{background = "PaladinCombat"}
		},
    Cunning = {{background = "HunterPetCunning"}},
	Tenacity = {{background = "HunterPetTenacity"}},
	Ferocity = {{background = "HunterPetFerocity"}},
    
	["Bird of Prey"] = {{background = "HunterPetCunning"}},
	Spider = {{background = "HunterPetCunning"}},
	Bat = {{background = "HunterPetCunning"}},
	["Wind Serpent"] = {{background = "HunterPetCunning"}},
	["Warp Striker"] = {{background = "HunterPetCunning"}},
	["Nether Ray"] = {{background = "HunterPetCunning"}},
		
    Bear = {{background = "HunterPetTenacity"}},
    Boar = {{background = "HunterPetTenacity"}},
    Crab = {{background = "HunterPetTenacity"}},
    Crocolisk = {{background = "HunterPetTenacity"}},
    Gorilla = {{background = "HunterPetTenacity"}},
    Scorpid = {{background = "HunterPetTenacity"}},
    Turtle = {{background = "HunterPetTenacity"}},
    
	["Carrion Bird"] = {{background = "HunterPetFerocity"}},
    Cat = {{background = "HunterPetFerocity"}},
	Dragonhawk = {{background = "HunterPetFerocity"}},
    Hyena = {{background = "HunterPetFerocity"}},
    Raptor = {{background = "HunterPetFerocity"}},
	Ravager = {{background = "HunterPetFerocity"}},
	Sporebat = {{background = "HunterPetFerocity"}},
	Serpent = {{background = "HunterPetFerocity"}},
    Tallstrider = {{background = "HunterPetFerocity"}},
    Wolf = {{background = "HunterPetFerocity"}}
	}
	local locale = GetLocale()
	if locale == "esES" then
    tabdata.DEATHKNIGHT[1].name = "Sangre"
		tabdata.DEATHKNIGHT[2].name = "Escarcha"
		tabdata.DEATHKNIGHT[3].name = "Profana"
		tabdata.WARRIOR[1].name = "Armas"
		tabdata.WARRIOR[2].name = "Furia"
		tabdata.WARRIOR[3].name = "Protección"
		tabdata.ROGUE[1].name = "Asesinato"
		tabdata.ROGUE[2].name = "Combate"
		tabdata.ROGUE[3].name = "Sutileza"
		tabdata.MAGE[1].name = "Arcano"
		tabdata.MAGE[2].name = "Fuego"
		tabdata.MAGE[3].name = "Escarcha"
		tabdata.PRIEST[1].name = "Disciplina"
		tabdata.PRIEST[2].name = "Sagrado"
		tabdata.PRIEST[3].name = "Sombras"
		tabdata.WARLOCK[1].name = "Aflicción"
		tabdata.WARLOCK[2].name = "Demonología"
		tabdata.WARLOCK[3].name = "Destrucción"
		tabdata.HUNTER[1].name = "Dominio de bestias"
		tabdata.HUNTER[2].name = "Puntería"
		tabdata.HUNTER[3].name = "Supervivencia"
		tabdata.DRUID[1].name = "Equilibrio"
		tabdata.DRUID[2].name = "Combate feral"
		tabdata.DRUID[3].name = "Restauración"
		tabdata.SHAMAN[1].name = "Elemental"
		tabdata.SHAMAN[2].name = "Mejora"
		tabdata.SHAMAN[3].name = "Restauración"
		tabdata.PALADIN[1].name = "Sagrado"
		tabdata.PALADIN[2].name = "Protección"
		tabdata.PALADIN[3].name = "Reprensión"
		tabdata.Cunning[1].name = "Astucia"
		tabdata.Tenacity[1].name = "Tenacidad"
		tabdata.Ferocity[1].name = "Ferocidad"
	elseif locale == "zhCN" then
		tabdata.DEATHKNIGHT[1].name = "鲜血"
		tabdata.DEATHKNIGHT[2].name = "冰霜"
		tabdata.DEATHKNIGHT[3].name = "邪恶"
		tabdata.WARRIOR[1].name = "武器"
		tabdata.WARRIOR[2].name = "狂怒"
		tabdata.WARRIOR[3].name = "防护"
		tabdata.ROGUE[1].name = "刺杀"
		tabdata.ROGUE[2].name = "战斗"
		tabdata.ROGUE[3].name = "敏锐"
		tabdata.MAGE[1].name = "奥术"
		tabdata.MAGE[2].name = "火焰"
		tabdata.MAGE[3].name = "冰霜"
		tabdata.PRIEST[1].name = "戒律"
		tabdata.PRIEST[2].name = "神圣"
		tabdata.PRIEST[3].name = "暗影"
		tabdata.WARLOCK[1].name = "痛苦"
		tabdata.WARLOCK[2].name = "恶魔学识"
		tabdata.WARLOCK[3].name = "毁灭"
		tabdata.HUNTER[1].name = "野兽掌握"
		tabdata.HUNTER[2].name = "射击"
		tabdata.HUNTER[3].name = "生存"
		tabdata.DRUID[1].name = "平衡"
		tabdata.DRUID[2].name = "野性战斗"
		tabdata.DRUID[3].name = "恢复"
		tabdata.SHAMAN[1].name = "元素战斗"
		tabdata.SHAMAN[2].name = "增强"
		tabdata.SHAMAN[3].name = "恢复"
		tabdata.PALADIN[1].name = "神圣"
		tabdata.PALADIN[2].name = "防护"
		tabdata.PALADIN[3].name = "惩戒"
		tabdata.Cunning[1].name = "灵巧"
		tabdata.Tenacity[1].name = "坚毅"
		tabdata.Ferocity[1].name = "凶暴"
	elseif locale == "frFR" then
		tabdata.DEATHKNIGHT[1].name = "Sang"
		tabdata.DEATHKNIGHT[2].name = "Givre"
		tabdata.DEATHKNIGHT[3].name = "Impie"
		tabdata.WARRIOR[1].name = "Armes"
		tabdata.WARRIOR[2].name = "Fureur"
		tabdata.WARRIOR[3].name = "Protection"
		tabdata.ROGUE[1].name = "Assassinat"
		tabdata.ROGUE[2].name = "Combat"
		tabdata.ROGUE[3].name = "Finesse"
		tabdata.MAGE[1].name = "Arcanes"
		tabdata.MAGE[2].name = "Feu"
		tabdata.MAGE[3].name = "Givre"
		tabdata.PRIEST[1].name = "Discipline"
		tabdata.PRIEST[2].name = "Sacré"
		tabdata.PRIEST[3].name = "Ombre"
		tabdata.WARLOCK[1].name = "Affliction"
		tabdata.WARLOCK[2].name = "Démonologie"
		tabdata.WARLOCK[3].name = "Destruction"
		tabdata.HUNTER[1].name = "Maîtrise des bêtes"
		tabdata.HUNTER[2].name = "Précision"
		tabdata.HUNTER[3].name = "Survie"
		tabdata.DRUID[1].name = "Équilibre"
		tabdata.DRUID[2].name = "Combat farouche"
		tabdata.DRUID[3].name = "Restauration"
		tabdata.SHAMAN[1].name = "Élémentaire"
		tabdata.SHAMAN[2].name = "Amélioration"
		tabdata.SHAMAN[3].name = "Restauration"
		tabdata.PALADIN[1].name = "Sacré"
		tabdata.PALADIN[2].name = "Protection"
		tabdata.PALADIN[3].name = "Vindicte"
		tabdata.Cunning[1].name = "Ruse"
		tabdata.Tenacity[1].name = "Tenacité"
		tabdata.Ferocity[1].name = "Férocité"
	elseif locale == "zhTW" then
		tabdata.DEATHKNIGHT[1].name = "血魄"
		tabdata.DEATHKNIGHT[2].name = "冰霜"
		tabdata.DEATHKNIGHT[3].name = "穢邪"
		tabdata.WARRIOR[1].name = "武器"
		tabdata.WARRIOR[2].name = "狂怒"
		tabdata.WARRIOR[3].name = "防護"
		tabdata.ROGUE[1].name = "刺殺"
		tabdata.ROGUE[2].name = "戰鬥"
		tabdata.ROGUE[3].name = "敏銳"
		tabdata.MAGE[1].name = "秘法"
		tabdata.MAGE[2].name = "火焰"
		tabdata.MAGE[3].name = "冰霜"
		tabdata.PRIEST[1].name = "戒律"
		tabdata.PRIEST[2].name = "神聖"
		tabdata.PRIEST[3].name = "暗影"
		tabdata.WARLOCK[1].name = "痛苦"
		tabdata.WARLOCK[2].name = "惡魔"
		tabdata.WARLOCK[3].name = "毀滅"
		tabdata.HUNTER[1].name = "野獸控制"
		tabdata.HUNTER[2].name = "射擊"
		tabdata.HUNTER[3].name = "生存"
		tabdata.DRUID[1].name = "平衡"
		tabdata.DRUID[2].name = "野性戰鬥"
		tabdata.DRUID[3].name = "恢復"
		tabdata.SHAMAN[1].name = "元素"
		tabdata.SHAMAN[2].name = "增強"
		tabdata.SHAMAN[3].name = "恢復"
		tabdata.PALADIN[1].name = "神聖"
		tabdata.PALADIN[2].name = "防護"
		tabdata.PALADIN[3].name = "懲戒"
		tabdata.Cunning[1].name = "靈巧"
		tabdata.Tenacity[1].name = "堅毅"
		tabdata.Ferocity[1].name = "兇暴"
	elseif locale == "deDE" then
		tabdata.DEATHKNIGHT[1].name = "Blut"
		tabdata.DEATHKNIGHT[2].name = "Frost"
		tabdata.DEATHKNIGHT[3].name = "Unheilig"
		tabdata.WARRIOR[1].name = "Waffen"
		tabdata.WARRIOR[2].name = "Furor"
		tabdata.WARRIOR[3].name = "Schutz"
		tabdata.ROGUE[1].name = "Meucheln"
		tabdata.ROGUE[2].name = "Kampf"
		tabdata.ROGUE[3].name = "Täuschung"
		tabdata.MAGE[1].name = "Arkan"
		tabdata.MAGE[2].name = "Feuer"
		tabdata.MAGE[3].name = "Frost"
		tabdata.PRIEST[1].name = "Disziplin"
		tabdata.PRIEST[2].name = "Heilig"
		tabdata.PRIEST[3].name = "Schatten"
		tabdata.WARLOCK[1].name = "Gebrechen"
		tabdata.WARLOCK[2].name = "Dämonologie"
		tabdata.WARLOCK[3].name = "Zerstörung"
		tabdata.HUNTER[1].name = "Tierherrschaft"
		tabdata.HUNTER[2].name = "Treffsicherheit"
		tabdata.HUNTER[3].name = "Überleben"
		tabdata.DRUID[1].name = "Gleichgewicht"
		tabdata.DRUID[2].name = "Wilder Kampf"
		tabdata.DRUID[3].name = "Wiederherstellung"
		tabdata.SHAMAN[1].name = "Elementar"
		tabdata.SHAMAN[2].name = "Verstärkung"
		tabdata.SHAMAN[3].name = "Wiederherstellung"
		tabdata.PALADIN[1].name = "Heilig"
		tabdata.PALADIN[2].name = "Schutz"
		tabdata.PALADIN[3].name = "Vergeltung"
		tabdata.Cunning[1].name = "Gerissenheit"
		tabdata.Tenacity[1].name = "Hartnäckigkeit"
		tabdata.Ferocity[1].name = "Wildheit"
	elseif locale == "ruRU" then
		tabdata.DEATHKNIGHT[1].name = "Кровь"
		tabdata.DEATHKNIGHT[2].name = "Холод"
		tabdata.DEATHKNIGHT[3].name = "Нечестивость"
		tabdata.WARRIOR[1].name = "Оружие"
		tabdata.WARRIOR[2].name = "Неистовство"
		tabdata.WARRIOR[3].name = "Защита"
		tabdata.ROGUE[1].name = "Ликвидация"
		tabdata.ROGUE[2].name = "Бой"
		tabdata.ROGUE[3].name = "Скрытность"
		tabdata.MAGE[1].name = "Тайная магия"
		tabdata.MAGE[2].name = "Огонь"
		tabdata.MAGE[3].name = "Лед"
		tabdata.PRIEST[1].name = "Послушание"
		tabdata.PRIEST[2].name = "Свет"
		tabdata.PRIEST[3].name = "Темная магия"
		tabdata.WARLOCK[1].name = "Колдовство"
		tabdata.WARLOCK[2].name = "Демонология"
		tabdata.WARLOCK[3].name = "Разрушение"
		tabdata.HUNTER[1].name = "Чувство зверя"
		tabdata.HUNTER[2].name = "Стрельба"
		tabdata.HUNTER[3].name = "Выживание"
		tabdata.DRUID[1].name = "Баланс"
		tabdata.DRUID[2].name = "Сила зверя"
		tabdata.DRUID[3].name = "Исцеление"
		tabdata.SHAMAN[1].name = "Стихии"
		tabdata.SHAMAN[2].name = "Совершенствование"
		tabdata.SHAMAN[3].name = "Исцеление"
		tabdata.PALADIN[1].name = "Свет"
		tabdata.PALADIN[2].name = "Защита"
		tabdata.PALADIN[3].name = "Возмездие"
		tabdata.Cunning[1].name = "Хитрость"
		tabdata.Tenacity[1].name = "Упорство"
		tabdata.Ferocity[1].name = "Свирепость"
	elseif locale == "koKR" then
		tabdata.DEATHKNIGHT[1].name = "혈기"
		tabdata.DEATHKNIGHT[2].name = "냉기"
		tabdata.DEATHKNIGHT[3].name = "부정"
		tabdata.WARRIOR[1].name = "무기"
		tabdata.WARRIOR[2].name = "분노"
		tabdata.WARRIOR[3].name = "방어"
		tabdata.ROGUE[1].name = "암살"
		tabdata.ROGUE[2].name = "전투"
		tabdata.ROGUE[3].name = "잠행"
		tabdata.MAGE[1].name = "비전"
		tabdata.MAGE[2].name = "화염"
		tabdata.MAGE[3].name = "냉기"
		tabdata.PRIEST[1].name = "수양"
		tabdata.PRIEST[2].name = "신성"
		tabdata.PRIEST[3].name = "암흑"
		tabdata.WARLOCK[1].name = "고통"
		tabdata.WARLOCK[2].name = "악마"
		tabdata.WARLOCK[3].name = "파괴"
		tabdata.HUNTER[1].name = "야수"
		tabdata.HUNTER[2].name = "사격"
		tabdata.HUNTER[3].name = "생존"
		tabdata.DRUID[1].name = "조화"
		tabdata.DRUID[2].name = "야성"
		tabdata.DRUID[3].name = "회복"
		tabdata.SHAMAN[1].name = "정기"
		tabdata.SHAMAN[2].name = "고양"
		tabdata.SHAMAN[3].name = "복원"
		tabdata.PALADIN[1].name = "신성"
		tabdata.PALADIN[2].name = "보호"
		tabdata.PALADIN[3].name = "징벌"
		tabdata.Cunning[1].name = "교활"
		tabdata.Tenacity[1].name = "끈기"
		tabdata.Ferocity[1].name = "야성"
	else
		tabdata.DEATHKNIGHT[1].name = "Blood"
		tabdata.DEATHKNIGHT[2].name = "Frost"
		tabdata.DEATHKNIGHT[3].name = "Unholy"
		tabdata.WARRIOR[1].name = "Arms"
		tabdata.WARRIOR[2].name = "Fury"
		tabdata.WARRIOR[3].name = "Protection"
		tabdata.ROGUE[1].name = "Assassination"
		tabdata.ROGUE[2].name = "Combat"
		tabdata.ROGUE[3].name = "Subtlety"
		tabdata.MAGE[1].name = "Arcane"
		tabdata.MAGE[2].name = "Fire"
		tabdata.MAGE[3].name = "Frost"
		tabdata.PRIEST[1].name = "Discipline"
		tabdata.PRIEST[2].name = "Holy"
		tabdata.PRIEST[3].name = "Shadow"
		tabdata.WARLOCK[1].name = "Affliction"
		tabdata.WARLOCK[2].name = "Demonology"
		tabdata.WARLOCK[3].name = "Destruction"
		tabdata.HUNTER[1].name = "Beast Mastery"
		tabdata.HUNTER[2].name = "Marksmanship"
		tabdata.HUNTER[3].name = "Survival"
		tabdata.DRUID[1].name = "Balance"
		tabdata.DRUID[2].name = "Feral Combat"
		tabdata.DRUID[3].name = "Restoration"
		tabdata.SHAMAN[1].name = "Elemental"
		tabdata.SHAMAN[2].name = "Enhancement"
		tabdata.SHAMAN[3].name = "Restoration"
		tabdata.PALADIN[1].name = "Holy"
		tabdata.PALADIN[2].name = "Protection"
		tabdata.PALADIN[3].name = "Retribution"
    tabdata.Bat[1].name = "Bat"
    tabdata.Bear[1].name = "Bear"
    tabdata.Boar[1].name = "Boar"
    tabdata.Cat[1].name = "Cat"
    tabdata.Crab[1].name = "Crab"
    tabdata.Crocolisk[1].name = "Crocolisk"
	tabdata.Dragonhawk[1].name = "Dragonhawk"
    tabdata.Gorilla[1].name = "Gorilla"
    tabdata.Hyena[1].name = "Hyena"
    tabdata.Raptor[1].name = "Raptor"
	tabdata.Ravager[1].name = "Ravager"
    tabdata.Scorpid[1].name = "Scorpid"
	tabdata.Serpent[1].name = "Serpent"
    tabdata.Spider[1].name = "Spider"
	tabdata.Sporebat[1].name = "Sporebat"
    tabdata.Tallstrider[1].name = "Tallstrider"
    tabdata.Turtle[1].name = "Turtle"
    tabdata.Wolf[1].name = "Wolf"
    tabdata["Bird of Prey"][1].name  = "Bird of Prey"
    tabdata["Carrion Bird"][1].name = "Carrion Bird"
	tabdata["Nether Ray"][1].name = "Nether Ray"
	tabdata["Warp Striker"][1].name = "Warp Striker"
    tabdata["Wind Serpent"][1].name = "Wind Serpent"
		tabdata.Cunning[1].name = "Cunning"
		tabdata.Tenacity[1].name = "Tenacity"
		tabdata.Ferocity[1].name = "Ferocity"
	end
	Talented.tabdata = tabdata
end
